version: "3.5"

services:
    mongodb:
        container_name: mongodb
        image: mongo:4.2
        volumes:
            - "${MONGO_BACKUP_DATA_PATH}:/data/db"
        ports:
            - "${MONGO_PUBLIC_PORT}:${MONGO_PRIVATE_PORT}"
        restart: unless-stopped
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
        logging:
            driver: "json-file"
            options:
                max-size: ${MONGO_LOGGING_MAX_SIZE}
                max-file: ${MONGO_LOGGING_MAX_FILE}

    redis:
        container_name: redis
        image: redis:6.0-rc-alpine3.11
        command: ["redis-server", "--appendonly", "yes"]
        volumes:
            - "${REDIS_BACKUP_DATA_PATH}:/data"
        ports:
            - "${REDIS_PUBLIC_PORT}:${REDIS_PRIVATE_PORT}"
        restart: unless-stopped
        environment:
            - REDIS_PASSWORD=${REDIS_PASSWORD}
        logging:
            driver: "json-file"
            options:
                max-size: ${REDIS_LOGGING_MAX_SIZE}
                max-file: ${REDIS_LOGGING_MAX_FILE}

    rabbitmq:
        container_name: rabbitmq
        image: rabbitmq:3.8-management-alpine
        environment:
            RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
            RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_DEFAULT_VHOST}
        ports:
            - ${RABBITMQ_MANAGEMENT_PUBLIC_PORT}:${RABBITMQ_MANAGEMENT_PRIVATE_PORT}
            - ${RABBITMQ_PUBLIC_PORT}:${RABBITMQ_PRIVATE_PORT}
        restart: unless-stopped
        logging:
            driver: "json-file"
            options:
                max-size: ${RABBITMQ_LOGGING_MAX_SIZE}
                max-file: ${RABBITMQ_LOGGING_MAX_FILE}

    postgres:
        container_name: postgres
        image: postgres:9.6-alpine
        ports:
            - ${POSTGRES_PUBLIC_PORT}:${POSTGRES_PRIVATE_PORT}
        volumes:
            - "${POSTGRES_BACKUP_DATA_PATH}:/var/lib/postgresql/data"
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${POSTGRES_DB}
        logging:
            driver: "json-file"
            options:
                max-size: ${POSTGRES_LOGGING_MAX_SIZE}
                max-file: ${POSTGRES_LOGGING_MAX_FILE}
        restart: unless-stopped

    elasticsearch:
        container_name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:7.5.2
        user: "1000:1000"
        volumes:
            - "${ELASTICSEARCH_DATA_PATH}:/usr/share/elasticsearch/data"
            - "${ELASTICSEARCH_CONFIG_PATH}:/usr/share/elasticsearch/config/elasticsearch.yml"
            - "${ELASTICSEARCH_BACKUP_DATA_PATH}:/usr/share/elasticsearch/backups"
        environment:
            - cluster.name=docker-cluster
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        environment:
            ELASTIC_USERNAME: ${ELASTICSEARCH_USERNAME}
            ELASTIC_PASSWORD: ${ELASTICSEARCH_PASSWORD}
        ports:
            - "${ELASTICSEARCH_PUBLIC_PORT}:${ELASTICSEARCH_PRIVATE_PORT}"
            - "9300"
        restart: unless-stopped
        logging:
            driver: "json-file"
            options:
                max-size: ${ELASTICSEARCH_LOGGING_MAX_SIZE}
                max-file: ${ELASTICSEARCH_LOGGING_MAX_FILE}
        networks:
            - elasticsearch

    kibana:
        container_name: kibana
        image: docker.elastic.co/kibana/kibana:7.5.2
        user: "1000:1000"
        volumes:
            - "${KIBANA_CONFIG_PATH}:/usr/share/kibana/config"
        ports:
            - "${KIBANA_PUBLIC_PORT}:${KIBANA_PRIVATE_PORT}"
        restart: unless-stopped
        logging:
            driver: "json-file"
            options:
                max-size: ${KIBANA_LOGGING_MAX_SIZE}
                max-file: ${KIBANA_LOGGING_MAX_FILE}
        networks:
            - elasticsearch
        depends_on:
            - elasticsearch

networks:
     elasticsearch:
         driver: bridge
